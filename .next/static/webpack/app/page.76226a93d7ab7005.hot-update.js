"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/email-service.ts":
/*!******************************!*\
  !*** ./lib/email-service.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmailService: function() { return /* binding */ EmailService; }\n/* harmony export */ });\n// Email service for sending order summaries to sales team\n// This provides a mock implementation that can be easily replaced with real email service\nconst FORMSPARK_FORM_ID = \"aOnLwysz5\" || 0;\nconst FORMSPARK_URL = \"https://submit-form.com/\".concat(FORMSPARK_FORM_ID);\nclass EmailService {\n    static async sendOrderToSales(summary) {\n        const FORMSPARK_URL = \"https://submit-form.com/aOnLwysz5\"; // 🔴 O, ne 0\n        const formatPrice = (price)=>new Intl.NumberFormat(\"en-US\", {\n                style: \"currency\",\n                currency: \"USD\",\n                minimumFractionDigits: 0\n            }).format(price);\n        const deviceCosts = summary.devices.reduce((sum, d)=>sum + d.totalCost, 0);\n        const basePrice = summary.totalPrice - deviceCosts;\n        const message = \"\\n\\uD83E\\uDDFE VR Configurator Order\\n\\n\\uD83C\\uDD94 Order ID: \".concat(summary.orderId, \"\\n\\uD83C\\uDFF7️ Pricing Tier: \").concat(summary.pricingTier, \"\\n\\uD83D\\uDCB0 Total Price: \").concat(formatPrice(summary.totalPrice), \"\\n\\uD83D\\uDCC5 Completed At: \").concat(new Date(summary.completedAt).toLocaleString(), \"\\n\\n\\uD83D\\uDC64 Customer Info:\\n- Name: \").concat(summary.user.name, \"\\n- Company: \").concat(summary.user.company, \"\\n- Email: \").concat(summary.user.email, \"\\n\\n\\uD83C\\uDFAE Games:\\n\").concat(summary.games.map((g)=>\"- \".concat(g.gameName, \" (\").concat(g.pricingPackage, \")\")).join(\"\\n\"), \"\\n\\n\\uD83C\\uDF0D Environments:\\n\").concat(summary.environments.map((e)=>\"- \".concat(e.environmentName, \" → \").concat(e.gameName, \" (\").concat(e.pricingPackage, \")\")).join(\"\\n\"), \"\\n\\n\\uD83D\\uDCE6 Devices:\\n\").concat(summary.devices.map((d)=>\"- \".concat(d.devicePackage, \" \\xd7\").concat(d.quantity, \" @ \").concat(formatPrice(d.totalCost / (d.quantity * d.eventDays)), \"/day for \").concat(d.eventDays, \" days = \").concat(formatPrice(d.totalCost))).join(\"\\n\"), \"\\n\\n\\uD83E\\uDDF1 Custom 3D:\\n\").concat(summary.custom3D && summary.custom3D.additional3DModels > 0 ? \"- \".concat(summary.custom3D.additional3DModels, \" additional model(s)\") : \"- No custom 3D models\", \"\\n\\n\\uD83E\\uDDE9 Options:\\n\").concat(summary.options.length > 0 ? summary.options.map((o)=>\"- \".concat(o.optionName, \" (\").concat(o.tier, \")\")).join(\"\\n\") : \"- No additional options\", \"\\n\\n\\uD83D\\uDCCA Pricing Breakdown:\\n- Base Package: \").concat(formatPrice(basePrice), \"\\n- Device Rental: \").concat(formatPrice(deviceCosts), \"\\n- Total: \").concat(formatPrice(summary.totalPrice), \"\\n    \").trim();\n        const formData = new URLSearchParams();\n        // Summary\n        formData.append(\"\\uD83E\\uDDFE Message Summary\", message);\n        formData.append(\"\\uD83C\\uDD94 Order ID\", summary.orderId);\n        formData.append(\"\\uD83C\\uDFF7️ Pricing Tier\", summary.pricingTier);\n        formData.append(\"\\uD83D\\uDCB0 Total Price\", formatPrice(summary.totalPrice));\n        formData.append(\"\\uD83D\\uDCC5 Completed At\", new Date(summary.completedAt).toLocaleString());\n        // User\n        formData.append(\"\\uD83D\\uDC64 Customer Info\", [\n            \"Name: \".concat(summary.user.name),\n            \"Company: \".concat(summary.user.company),\n            \"Email: \".concat(summary.user.email)\n        ].join(\"\\n\"));\n        // Games\n        formData.append(\"\\uD83C\\uDFAE Games\", summary.games.length ? summary.games.map((g)=>\"- \".concat(g.gameName, \" (\").concat(g.pricingPackage, \")\")).join(\"\\n\") : \"- No games selected\");\n        // Environments\n        formData.append(\"\\uD83C\\uDF0D Environments\", summary.environments.length ? summary.environments.map((e)=>\"- \".concat(e.environmentName, \" → \").concat(e.gameName, \" (\").concat(e.pricingPackage, \")\")).join(\"\\n\") : \"- No environments selected\");\n        // Devices\n        formData.append(\"\\uD83D\\uDCE6 Devices\", summary.devices.length ? summary.devices.map((d)=>\"- \".concat(d.devicePackage, \" \\xd7\").concat(d.quantity, \" @ \").concat(formatPrice(d.totalCost / (d.quantity * d.eventDays)), \"/day for \").concat(d.eventDays, \" days = \").concat(formatPrice(d.totalCost))).join(\"\\n\") : \"- No devices selected\");\n        // Custom 3D\n        formData.append(\"\\uD83E\\uDDF1 Custom 3D\", summary.custom3D && summary.custom3D.additional3DModels > 0 ? \"- \".concat(summary.custom3D.additional3DModels, \" additional model(s)\") : \"- No custom 3D models\");\n        // Options\n        formData.append(\"\\uD83E\\uDDE9 Options\", summary.options.length ? summary.options.map((o)=>\"- \".concat(o.optionName, \" (\").concat(o.tier, \")\")).join(\"\\n\") : \"- No additional options\");\n        // Price breakdown\n        formData.append(\"\\uD83D\\uDCCA Pricing Breakdown\", [\n            \"Base Package: \".concat(formatPrice(basePrice)),\n            \"Device Rental: \".concat(formatPrice(deviceCosts)),\n            \"Total: \".concat(formatPrice(summary.totalPrice))\n        ].join(\"\\n\"));\n        // Email reply address\n        formData.append(\"_replyto\", summary.user.email);\n        formData.append(\"_subject\", \"\\uD83D\\uDFE2 VR Configurator – Order \".concat(summary.orderId));\n        try {\n            const res = await fetch(FORMSPARK_URL, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                body: formData\n            });\n            return true;\n        } catch (err) {\n            console.error(\"Failed to send via Formspark:\", err);\n            return false;\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/email-service.ts\n"));

/***/ })

});