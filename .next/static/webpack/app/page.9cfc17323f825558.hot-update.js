"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/email-service.ts":
/*!******************************!*\
  !*** ./lib/email-service.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmailService: function() { return /* binding */ EmailService; }\n/* harmony export */ });\n// Email service for sending order summaries to sales team\n// This provides a mock implementation that can be easily replaced with real email service\nconst FORMSPARK_FORM_ID = \"aOnLwysz5\" || 0;\nconst FORMSPARK_URL = \"https://submit-form.com/\".concat(FORMSPARK_FORM_ID);\nclass EmailService {\n    static formatPrice(price) {\n        return new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0\n        }).format(price);\n    }\n    static generateEmailHTML(summary) {\n        const deviceCosts = summary.devices.reduce((sum, device)=>sum + device.totalCost, 0);\n        const basePackagePrice = summary.totalPrice - deviceCosts;\n        return '\\n      <!DOCTYPE html>\\n      <html>\\n        <head>\\n          <meta charset=\"utf-8\">\\n          <title>New VR Configurator Order</title>\\n          <style>\\n            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\\n            .container { max-width: 600px; margin: 0 auto; padding: 20px; }\\n            .header { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }\\n            .section { margin-bottom: 20px; padding: 15px; border: 1px solid #e9ecef; border-radius: 8px; }\\n            .tier-badge { display: inline-block; padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: bold; }\\n            .tier-silver { background: #6c757d; color: white; }\\n            .tier-gold { background: #ffc107; color: white; }\\n            .tier-bronze { background: #fd7e14; color: white; }\\n            .price { font-size: 18px; font-weight: bold; color: #28a745; }\\n            table { width: 100%; border-collapse: collapse; margin-top: 10px; }\\n            th, td { padding: 8px; text-align: left; border-bottom: 1px solid #dee2e6; }\\n            th { background: #f8f9fa; font-weight: bold; }\\n          </style>\\n        </head>\\n        <body>\\n          <div class=\"container\">\\n            <div class=\"header\">\\n              <h1>New VR Configurator Order</h1>\\n              <p><strong>Order ID:</strong> '.concat(summary.orderId, \"</p>\\n              <p><strong>Completed:</strong> \").concat(new Date(summary.completedAt).toLocaleString(), '</p>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Customer Details</h2>\\n              <p><strong>Name:</strong> ').concat(summary.user.name, \"</p>\\n              <p><strong>Company:</strong> \").concat(summary.user.company, \"</p>\\n              <p><strong>Email:</strong> \").concat(summary.user.email, '</p>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Package Summary</h2>\\n              <p><strong>Pricing Tier:</strong> \\n                <span class=\"tier-badge tier-').concat(summary.pricingTier.toLowerCase(), '\">').concat(summary.pricingTier, '</span>\\n              </p>\\n              <p class=\"price\"><strong>Total Price:</strong> ').concat(this.formatPrice(summary.totalPrice), '</p>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Selected Games</h2>\\n              <table>\\n                <thead>\\n                  <tr><th>Game Name</th><th>Tier</th></tr>\\n                </thead>\\n                <tbody>\\n                  ').concat(summary.games.map((game)=>\"\\n                    <tr>\\n                      <td>\".concat(game.gameName, '</td>\\n                      <td><span class=\"tier-badge tier-').concat(game.pricingPackage.toLowerCase(), '\">').concat(game.pricingPackage, \"</span></td>\\n                    </tr>\\n                  \")).join(\"\"), '\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Selected Environments</h2>\\n              <table>\\n                <thead>\\n                  <tr><th>Environment</th><th>For Game</th><th>Tier</th></tr>\\n                </thead>\\n                <tbody>\\n                  ').concat(summary.environments.map((env)=>\"\\n                    <tr>\\n                      <td>\".concat(env.environmentName, \"</td>\\n                      <td>\").concat(env.gameName, '</td>\\n                      <td><span class=\"tier-badge tier-').concat(env.pricingPackage.toLowerCase(), '\">').concat(env.pricingPackage, \"</span></td>\\n                    </tr>\\n                  \")).join(\"\"), '\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Device Rental</h2>\\n              <table>\\n                <thead>\\n                  <tr><th>Device</th><th>Quantity</th><th>Days</th><th>Total Cost</th></tr>\\n                </thead>\\n                <tbody>\\n                  ').concat(summary.devices.map((device)=>\"\\n                    <tr>\\n                      <td>\".concat(device.devicePackage, \"</td>\\n                      <td>\").concat(device.quantity, \"</td>\\n                      <td>\").concat(device.eventDays, \"</td>\\n                      <td>\").concat(this.formatPrice(device.totalCost), \"</td>\\n                    </tr>\\n                  \")).join(\"\"), \"\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            \").concat(summary.custom3D && summary.custom3D.additional3DModels > 0 ? '\\n              <div class=\"section\">\\n                <h2>Custom 3D Models</h2>\\n                <p><strong>Additional 3D Models:</strong> '.concat(summary.custom3D.additional3DModels, \"</p>\\n              </div>\\n            \") : \"\", \"\\n\\n            \").concat(summary.options.length > 0 ? '\\n              <div class=\"section\">\\n                <h2>Additional Options</h2>\\n                <table>\\n                  <thead>\\n                    <tr><th>Option</th><th>Tier</th></tr>\\n                  </thead>\\n                  <tbody>\\n                    '.concat(summary.options.map((option)=>\"\\n                      <tr>\\n                        <td>\".concat(option.optionName, '</td>\\n                        <td><span class=\"tier-badge tier-').concat(option.tier.toLowerCase(), '\">').concat(option.tier, \"</span></td>\\n                      </tr>\\n                    \")).join(\"\"), \"\\n                  </tbody>\\n                </table>\\n              </div>\\n            \") : \"\", '\\n\\n            <div class=\"section\">\\n              <h2>Pricing Breakdown</h2>\\n              <table>\\n                <tbody>\\n                  <tr>\\n                    <td><strong>').concat(summary.pricingTier, \" Package</strong></td>\\n                    <td><strong>\").concat(this.formatPrice(basePackagePrice), \"</strong></td>\\n                  </tr>\\n                  <tr>\\n                    <td>Device Rental</td>\\n                    <td>\").concat(this.formatPrice(deviceCosts), '</td>\\n                  </tr>\\n                  <tr style=\"border-top: 2px solid #333;\">\\n                    <td><strong>Total</strong></td>\\n                    <td><strong>').concat(this.formatPrice(summary.totalPrice), '</strong></td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            <div class=\"section\" style=\"background: #e7f3ff; border-color: #0066cc;\">\\n              <h3 style=\"color: #0066cc;\">Next Steps</h3>\\n              <p>Please contact the customer within 24 hours to discuss their requirements and finalize the order.</p>\\n              <p><strong>Customer Contact:</strong> ').concat(summary.user.email, \"</p>\\n            </div>\\n          </div>\\n        </body>\\n      </html>\\n    \");\n    }\n    // static async sendOrderToSales(summary: EmailOrderSummary): Promise<boolean> {\n    //   try {\n    //     // In a real implementation, this would use a service like SendGrid, AWS SES, or similar\n    //     // For now, we'll simulate the email sending and log the content\n    //     const emailHTML = this.generateEmailHTML(summary)\n    //     const emailText = this.generateEmailText(summary)\n    //     console.log(\"=== EMAIL TO SALES TEAM ===\")\n    //     console.log(\"To: sales@company.com\")\n    //     console.log(\"Subject: New VR Configurator Order - \" + summary.orderId)\n    //     console.log(\"HTML Content:\", emailHTML)\n    //     console.log(\"Text Content:\", emailText)\n    //     console.log(\"=== END EMAIL ===\")\n    //     // Simulate API call delay\n    //     await new Promise((resolve) => setTimeout(resolve, 1000))\n    //     // In production, replace this with actual email service:\n    //     /*\n    //     const response = await fetch('/api/send-email', {\n    //       method: 'POST',\n    //       headers: { 'Content-Type': 'application/json' },\n    //       body: JSON.stringify({\n    //         to: 'sales@company.com',\n    //         subject: `New VR Configurator Order - ${summary.orderId}`,\n    //         html: emailHTML,\n    //         text: emailText\n    //       })\n    //     });\n    //     return response.ok;\n    //     */\n    //     return true // Simulate successful send\n    //   } catch (error) {\n    //     console.error(\"Failed to send email to sales team:\", error)\n    //     return false\n    //   }\n    // }\n    // static async sendOrderToSales(summary: EmailOrderSummary): Promise<boolean> {\n    //   const FORMSPARK_URL = \"https://submit-form.com/aOnLwysz5\";\n    //   const message = [\n    //     `VR Configurator Order`,\n    //     `Order ID: ${summary.orderId}`,\n    //     `Pricing tier: ${summary.pricingTier}`,\n    //     `Total price: ${EmailService.formatPrice(summary.totalPrice)}`,\n    //     \"\",\n    //     `— Customer Name: ${summary.user.name}`,\n    //     `Company: ${summary.user.company}`,\n    //     `Email: ${summary.user.email}`,\n    //     \"\",\n    //     `— Games:`,\n    //     ...summary.games.map((g) => `- ${g.gameName} (${g.pricingPackage})`),\n    //     \"\",\n    //     `— Environments:`,\n    //     ...summary.environments.map(\n    //       (e) => `- ${e.environmentName} → ${e.gameName} (${e.pricingPackage})`\n    //     ),\n    //     \"\",\n    //     `— Devices:`,\n    //     ...summary.devices.map(\n    //       (d) => `- ${d.devicePackage} ×${d.quantity} @ $${d.totalCost / d.quantity} (${d.eventDays}d)`\n    //     ),\n    //     \"\",\n    //     `— Options:`,\n    //     ...summary.options.map((o) => `- ${o.optionName} (${o.tier})`),\n    //     \"\",\n    //     `JSON payload is attached below in the submission.`,\n    //   ].join(\" — \");\n    //   const formData = new URLSearchParams();\n    //   formData.append(\"message\", message);\n    //   formData.append(\"orderId\", summary.orderId);\n    //   formData.append(\"pricingTier\", summary.pricingTier);\n    //   formData.append(\"totalPrice\", summary.totalPrice.toString());\n    //   formData.append(\"currentStep\", \"7\");\n    //   formData.append(\"_replyto\", summary.user.email);\n    //   formData.append(\"user\", JSON.stringify(summary.user));\n    //   formData.append(\"games\", JSON.stringify(summary.games));\n    //   formData.append(\"environments\", JSON.stringify(summary.environments));\n    //   formData.append(\"devices\", JSON.stringify(summary.devices));\n    //   formData.append(\"custom3D\", JSON.stringify(summary.custom3D));\n    //   formData.append(\"options\", JSON.stringify(summary.options));\n    //   try {\n    //     const res = await fetch(FORMSPARK_URL, {\n    //       method: \"POST\",\n    //       mode: \"no-cors\",\n    //       headers: {\n    //         \"Content-Type\": \"application/x-www-form-urlencoded\",\n    //       },\n    //       body: formData.toString(),\n    //     });\n    //     if (!res.ok) {\n    //       throw new Error(\"Formspark 404\");\n    //     }\n    //     return true;\n    //   } catch (err) {\n    //     console.error(\"Failed to send email (Formspark):\", err);\n    //     return false;\n    //   }\n    // }\n    static async sendOrderToSales(summary) {\n        const message = \"\\n  VR Configurator Order\\n  \\n  Order ID: \".concat(summary.orderId, \"\\n  Pricing tier: \").concat(summary.pricingTier, \"\\n  Total price: \").concat(this.formatPrice(summary.totalPrice), \"\\n  \\n  Customer Name: \").concat(summary.user.name, \"\\n  Company: \").concat(summary.user.company, \"\\n  Email: \").concat(summary.user.email, \"\\n  \\n  Games:\\n  \").concat(summary.games.map((g)=>\"- \".concat(g.gameName, \" (\").concat(g.pricingPackage, \")\")).join(\"\\n\"), \"\\n  \\n  Environments:\\n  \").concat(summary.environments.map((e)=>\"- \".concat(e.environmentName, \" → \").concat(e.gameName, \" (\").concat(e.pricingPackage, \")\")).join(\"\\n\"), \"\\n  \\n  Devices:\\n  \").concat(summary.devices.map((d)=>\"- \".concat(d.devicePackage, \" \\xd7\").concat(d.quantity, \" @ \").concat(this.formatPrice(d.totalCost / d.quantity), \" (\").concat(d.eventDays, \"d)\")).join(\"\\n\"), \"\\n  \\n  \").concat(summary.custom3D && summary.custom3D.additional3DModels > 0 ? \"Custom 3D Models:\\n- \".concat(summary.custom3D.additional3DModels, \" additional models\") : \"\", \"\\n  \\n  Options:\\n  \").concat(summary.options.map((o)=>\"- \".concat(o.optionName, \" (\").concat(o.tier, \")\")).join(\"\\n\"), \"\\n    \").trim();\n        const payload = {\n            message,\n            orderId: summary.orderId,\n            pricingTier: summary.pricingTier,\n            totalPrice: summary.totalPrice,\n            currentStep: 7,\n            user: JSON.stringify(summary.user),\n            games: JSON.stringify(summary.games),\n            environments: JSON.stringify(summary.environments),\n            devices: JSON.stringify(summary.devices),\n            custom3D: JSON.stringify(summary.custom3D),\n            options: JSON.stringify(summary.options)\n        };\n        try {\n            const res = await fetch(\"https://submit-form.com/a0nLwysz5\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(payload)\n            });\n            if (!res.ok) {\n                throw new Error(\"Formspark 404\");\n            }\n            return true;\n        } catch (err) {\n            console.error(\"Failed to send email (Formspark):\", err);\n            throw new Error(\"Email send failed\");\n        }\n    }\n    static generateEmailText(summary) {\n        const deviceCosts = summary.devices.reduce((sum, device)=>sum + device.totalCost, 0);\n        const basePackagePrice = summary.totalPrice - deviceCosts;\n        return \"\\nNEW VR CONFIGURATOR ORDER\\n\\nOrder ID: \".concat(summary.orderId, \"\\nCompleted: \").concat(new Date(summary.completedAt).toLocaleString(), \"\\n\\nCUSTOMER DETAILS\\nName: \").concat(summary.user.name, \"\\nCompany: \").concat(summary.user.company, \"\\nEmail: \").concat(summary.user.email, \"\\n\\nPACKAGE SUMMARY\\nPricing Tier: \").concat(summary.pricingTier, \"\\nTotal Price: \").concat(this.formatPrice(summary.totalPrice), \"\\n\\nSELECTED GAMES\\n\").concat(summary.games.map((game)=>\"- \".concat(game.gameName, \" (\").concat(game.pricingPackage, \")\")).join(\"\\n\"), \"\\n\\nSELECTED ENVIRONMENTS\\n\").concat(summary.environments.map((env)=>\"- \".concat(env.environmentName, \" for \").concat(env.gameName, \" (\").concat(env.pricingPackage, \")\")).join(\"\\n\"), \"\\n\\nDEVICE RENTAL\\n\").concat(summary.devices.map((device)=>\"- \".concat(device.devicePackage, \": \").concat(device.quantity, \" units \\xd7 \").concat(device.eventDays, \" days = \").concat(this.formatPrice(device.totalCost))).join(\"\\n\"), \"\\n\\n\").concat(summary.custom3D && summary.custom3D.additional3DModels > 0 ? \"CUSTOM 3D MODELS\\nAdditional 3D Models: \".concat(summary.custom3D.additional3DModels, \"\\n\") : \"\", \"\\n\\n\").concat(summary.options.length > 0 ? \"ADDITIONAL OPTIONS\\n\".concat(summary.options.map((option)=>\"- \".concat(option.optionName, \" (\").concat(option.tier, \")\")).join(\"\\n\"), \"\\n\") : \"\", \"\\n\\nPRICING BREAKDOWN\\n\").concat(summary.pricingTier, \" Package: \").concat(this.formatPrice(basePackagePrice), \"\\nDevice Rental: \").concat(this.formatPrice(deviceCosts), \"\\nTotal: \").concat(this.formatPrice(summary.totalPrice), \"\\n\\nNEXT STEPS\\nPlease contact the customer within 24 hours to discuss their requirements and finalize the order.\\nCustomer Contact: \").concat(summary.user.email, \"\\n    \").trim();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/email-service.ts\n"));

/***/ })

});