"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/email-service.ts":
/*!******************************!*\
  !*** ./lib/email-service.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmailService: function() { return /* binding */ EmailService; }\n/* harmony export */ });\n/* harmony import */ var _format_summary_for_user__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./format-summary-for-user */ \"(app-pages-browser)/./lib/format-summary-for-user.ts\");\n// Email service for sending order summaries to sales team\n// This provides a mock implementation that can be easily replaced with real email service\n\nconst FORMSPARK_FORM_ID = \"aOnLwysz5\" || 0;\nconst FORMSPARK_URL = \"https://submit-form.com/\".concat(FORMSPARK_FORM_ID);\nclass EmailService {\n    static formatPrice(price) {\n        return new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0\n        }).format(price);\n    }\n    static generateEmailHTML(summary) {\n        const deviceCosts = summary.devices.reduce((sum, device)=>sum + device.totalCost, 0);\n        const basePackagePrice = summary.totalPrice - deviceCosts;\n        return '\\n      <!DOCTYPE html>\\n      <html>\\n        <head>\\n          <meta charset=\"utf-8\">\\n          <title>New VR Configurator Order</title>\\n          <style>\\n            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\\n            .container { max-width: 600px; margin: 0 auto; padding: 20px; }\\n            .header { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }\\n            .section { margin-bottom: 20px; padding: 15px; border: 1px solid #e9ecef; border-radius: 8px; }\\n            .tier-badge { display: inline-block; padding: 4px 8px; border-radius: 4px; font-size: 12px; font-weight: bold; }\\n            .tier-silver { background: #6c757d; color: white; }\\n            .tier-gold { background: #ffc107; color: white; }\\n            .tier-bronze { background: #fd7e14; color: white; }\\n            .price { font-size: 18px; font-weight: bold; color: #28a745; }\\n            table { width: 100%; border-collapse: collapse; margin-top: 10px; }\\n            th, td { padding: 8px; text-align: left; border-bottom: 1px solid #dee2e6; }\\n            th { background: #f8f9fa; font-weight: bold; }\\n          </style>\\n        </head>\\n        <body>\\n          <div class=\"container\">\\n            <div class=\"header\">\\n              <h1>New VR Configurator Order</h1>\\n              <p><strong>Order ID:</strong> '.concat(summary.orderId, \"</p>\\n              <p><strong>Completed:</strong> \").concat(new Date(summary.completedAt).toLocaleString(), '</p>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Customer Details</h2>\\n              <p><strong>Name:</strong> ').concat(summary.user.name, \"</p>\\n              <p><strong>Company:</strong> \").concat(summary.user.company, \"</p>\\n              <p><strong>Email:</strong> \").concat(summary.user.email, '</p>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Package Summary</h2>\\n              <p><strong>Pricing Tier:</strong> \\n                <span class=\"tier-badge tier-').concat(summary.pricingTier.toLowerCase(), '\">').concat(summary.pricingTier, '</span>\\n              </p>\\n              <p class=\"price\"><strong>Total Price:</strong> ').concat(this.formatPrice(summary.totalPrice), '</p>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Selected Games</h2>\\n              <table>\\n                <thead>\\n                  <tr><th>Game Name</th><th>Tier</th></tr>\\n                </thead>\\n                <tbody>\\n                  ').concat(summary.games.map((game)=>\"\\n                    <tr>\\n                      <td>\".concat(game.gameName, '</td>\\n                      <td><span class=\"tier-badge tier-').concat(game.pricingPackage.toLowerCase(), '\">').concat(game.pricingPackage, \"</span></td>\\n                    </tr>\\n                  \")).join(\"\"), '\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Selected Environments</h2>\\n              <table>\\n                <thead>\\n                  <tr><th>Environment</th><th>For Game</th><th>Tier</th></tr>\\n                </thead>\\n                <tbody>\\n                  ').concat(summary.environments.map((env)=>\"\\n                    <tr>\\n                      <td>\".concat(env.environmentName, \"</td>\\n                      <td>\").concat(env.gameName, '</td>\\n                      <td><span class=\"tier-badge tier-').concat(env.pricingPackage.toLowerCase(), '\">').concat(env.pricingPackage, \"</span></td>\\n                    </tr>\\n                  \")).join(\"\"), '\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            <div class=\"section\">\\n              <h2>Device Rental</h2>\\n              <table>\\n                <thead>\\n                  <tr><th>Device</th><th>Quantity</th><th>Days</th><th>Total Cost</th></tr>\\n                </thead>\\n                <tbody>\\n                  ').concat(summary.devices.map((device)=>\"\\n                    <tr>\\n                      <td>\".concat(device.devicePackage, \"</td>\\n                      <td>\").concat(device.quantity, \"</td>\\n                      <td>\").concat(device.eventDays, \"</td>\\n                      <td>\").concat(this.formatPrice(device.totalCost), \"</td>\\n                    </tr>\\n                  \")).join(\"\"), \"\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            \").concat(summary.custom3D && summary.custom3D.additional3DModels > 0 ? '\\n              <div class=\"section\">\\n                <h2>Custom 3D Models</h2>\\n                <p><strong>Additional 3D Models:</strong> '.concat(summary.custom3D.additional3DModels, \"</p>\\n              </div>\\n            \") : \"\", \"\\n\\n            \").concat(summary.options.length > 0 ? '\\n              <div class=\"section\">\\n                <h2>Additional Options</h2>\\n                <table>\\n                  <thead>\\n                    <tr><th>Option</th><th>Tier</th></tr>\\n                  </thead>\\n                  <tbody>\\n                    '.concat(summary.options.map((option)=>\"\\n                      <tr>\\n                        <td>\".concat(option.optionName, '</td>\\n                        <td><span class=\"tier-badge tier-').concat(option.tier.toLowerCase(), '\">').concat(option.tier, \"</span></td>\\n                      </tr>\\n                    \")).join(\"\"), \"\\n                  </tbody>\\n                </table>\\n              </div>\\n            \") : \"\", '\\n\\n            <div class=\"section\">\\n              <h2>Pricing Breakdown</h2>\\n              <table>\\n                <tbody>\\n                  <tr>\\n                    <td><strong>').concat(summary.pricingTier, \" Package</strong></td>\\n                    <td><strong>\").concat(this.formatPrice(basePackagePrice), \"</strong></td>\\n                  </tr>\\n                  <tr>\\n                    <td>Device Rental</td>\\n                    <td>\").concat(this.formatPrice(deviceCosts), '</td>\\n                  </tr>\\n                  <tr style=\"border-top: 2px solid #333;\">\\n                    <td><strong>Total</strong></td>\\n                    <td><strong>').concat(this.formatPrice(summary.totalPrice), '</strong></td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            <div class=\"section\" style=\"background: #e7f3ff; border-color: #0066cc;\">\\n              <h3 style=\"color: #0066cc;\">Next Steps</h3>\\n              <p>Please contact the customer within 24 hours to discuss their requirements and finalize the order.</p>\\n              <p><strong>Customer Contact:</strong> ').concat(summary.user.email, \"</p>\\n            </div>\\n          </div>\\n        </body>\\n      </html>\\n    \");\n    }\n    // static async sendOrderToSales(summary: EmailOrderSummary): Promise<boolean> {\n    //   try {\n    //     // In a real implementation, this would use a service like SendGrid, AWS SES, or similar\n    //     // For now, we'll simulate the email sending and log the content\n    //     const emailHTML = this.generateEmailHTML(summary)\n    //     const emailText = this.generateEmailText(summary)\n    //     console.log(\"=== EMAIL TO SALES TEAM ===\")\n    //     console.log(\"To: sales@company.com\")\n    //     console.log(\"Subject: New VR Configurator Order - \" + summary.orderId)\n    //     console.log(\"HTML Content:\", emailHTML)\n    //     console.log(\"Text Content:\", emailText)\n    //     console.log(\"=== END EMAIL ===\")\n    //     // Simulate API call delay\n    //     await new Promise((resolve) => setTimeout(resolve, 1000))\n    //     // In production, replace this with actual email service:\n    //     /*\n    //     const response = await fetch('/api/send-email', {\n    //       method: 'POST',\n    //       headers: { 'Content-Type': 'application/json' },\n    //       body: JSON.stringify({\n    //         to: 'sales@company.com',\n    //         subject: `New VR Configurator Order - ${summary.orderId}`,\n    //         html: emailHTML,\n    //         text: emailText\n    //       })\n    //     });\n    //     return response.ok;\n    //     */\n    //     return true // Simulate successful send\n    //   } catch (error) {\n    //     console.error(\"Failed to send email to sales team:\", error)\n    //     return false\n    //   }\n    // }\n    static async sendOrderToSales(summary) {\n        try {\n            // 1) Glavna poruka – čitljiv plain text\n            const message = (0,_format_summary_for_user__WEBPACK_IMPORTED_MODULE_0__.formatSummaryForUser)(summary);\n            // 2) Napravi human-readable polja za mail (key/value)\n            const fmt = (n)=>new Intl.NumberFormat(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                    minimumFractionDigits: 0\n                }).format(n);\n            const gamesList = summary.games.length ? summary.games.map((g)=>\"- \".concat(g.gameName, \" (\").concat(g.pricingPackage, \")\")).join(\"\\n\") : \"—\";\n            const envsList = summary.environments.length ? summary.environments.map((e)=>\"- \".concat(e.environmentName, \" → \").concat(e.gameName, \" (\").concat(e.pricingPackage, \")\")).join(\"\\n\") : \"—\";\n            const devicesList = summary.devices.length ? summary.devices.map((d)=>\"- \".concat(d.devicePackage, \" \\xd7\").concat(d.quantity, \" @ \").concat(fmt(d.totalCost / (d.quantity * d.eventDays)), \"/day (\").concat(d.eventDays, \"d) = \").concat(fmt(d.totalCost))).join(\"\\n\") : \"—\";\n            const optionsList = summary.options.length ? summary.options.map((o)=>\"- \".concat(o.optionName, \" (\").concat(o.tier, \")\")).join(\"\\n\") : \"—\";\n            const deviceCosts = summary.devices.reduce((s, d)=>s + d.totalCost, 0);\n            const basePrice = summary.totalPrice - deviceCosts;\n            // 3) FormData (bez Content-Type headera, browser će ga postaviti)\n            const form = new FormData();\n            form.append(\"message\", message) // glavni blok teksta\n            ;\n            form.append(\"_replyto\", summary.user.email) // da se može odmah reply-at korisniku\n            ;\n            // jasna key/value polja (čitljiva, bez JSON-a)\n            form.append(\"orderId\", summary.orderId);\n            form.append(\"completedAt\", new Date(summary.completedAt).toLocaleString());\n            form.append(\"pricingTier\", summary.pricingTier);\n            form.append(\"totalPrice\", fmt(summary.totalPrice));\n            form.append(\"user_name\", summary.user.name);\n            form.append(\"user_company\", summary.user.company);\n            form.append(\"user_email\", summary.user.email);\n            form.append(\"games\", gamesList);\n            form.append(\"environments\", envsList);\n            form.append(\"devices\", devicesList);\n            form.append(\"custom3D\", summary.custom3D && summary.custom3D.additional3DModels > 0 ? \"\".concat(summary.custom3D.additional3DModels, \" additional model(s)\") : \"No custom 3D models\");\n            form.append(\"options\", optionsList);\n            form.append(\"price_base\", fmt(basePrice));\n            form.append(\"price_devices\", fmt(deviceCosts));\n            form.append(\"price_total\", fmt(summary.totalPrice));\n            // (po želji) sirovi JSON za interni export – ako ga ne želiš, izbaci ovu liniju\n            // form.append(\"payload_json\", JSON.stringify(summary))\n            // 4) Slanje – no-cors; ne provjeravamo res.ok jer je 'opaque'\n            await fetch(FORMSPARK_URL, {\n                method: \"POST\",\n                mode: \"no-cors\",\n                body: form\n            });\n            return true;\n        } catch (err) {\n            console.error(\"Failed to send email (Formspark):\", err);\n            return false;\n        }\n    }\n    static generateEmailText(summary) {\n        const deviceCosts = summary.devices.reduce((sum, device)=>sum + device.totalCost, 0);\n        const basePackagePrice = summary.totalPrice - deviceCosts;\n        return \"\\nNEW VR CONFIGURATOR ORDER\\n\\nOrder ID: \".concat(summary.orderId, \"\\nCompleted: \").concat(new Date(summary.completedAt).toLocaleString(), \"\\n\\nCUSTOMER DETAILS\\nName: \").concat(summary.user.name, \"\\nCompany: \").concat(summary.user.company, \"\\nEmail: \").concat(summary.user.email, \"\\n\\nPACKAGE SUMMARY\\nPricing Tier: \").concat(summary.pricingTier, \"\\nTotal Price: \").concat(this.formatPrice(summary.totalPrice), \"\\n\\nSELECTED GAMES\\n\").concat(summary.games.map((game)=>\"- \".concat(game.gameName, \" (\").concat(game.pricingPackage, \")\")).join(\"\\n\"), \"\\n\\nSELECTED ENVIRONMENTS\\n\").concat(summary.environments.map((env)=>\"- \".concat(env.environmentName, \" for \").concat(env.gameName, \" (\").concat(env.pricingPackage, \")\")).join(\"\\n\"), \"\\n\\nDEVICE RENTAL\\n\").concat(summary.devices.map((device)=>\"- \".concat(device.devicePackage, \": \").concat(device.quantity, \" units \\xd7 \").concat(device.eventDays, \" days = \").concat(this.formatPrice(device.totalCost))).join(\"\\n\"), \"\\n\\n\").concat(summary.custom3D && summary.custom3D.additional3DModels > 0 ? \"CUSTOM 3D MODELS\\nAdditional 3D Models: \".concat(summary.custom3D.additional3DModels, \"\\n\") : \"\", \"\\n\\n\").concat(summary.options.length > 0 ? \"ADDITIONAL OPTIONS\\n\".concat(summary.options.map((option)=>\"- \".concat(option.optionName, \" (\").concat(option.tier, \")\")).join(\"\\n\"), \"\\n\") : \"\", \"\\n\\nPRICING BREAKDOWN\\n\").concat(summary.pricingTier, \" Package: \").concat(this.formatPrice(basePackagePrice), \"\\nDevice Rental: \").concat(this.formatPrice(deviceCosts), \"\\nTotal: \").concat(this.formatPrice(summary.totalPrice), \"\\n\\nNEXT STEPS\\nPlease contact the customer within 24 hours to discuss their requirements and finalize the order.\\nCustomer Contact: \").concat(summary.user.email, \"\\n    \").trim();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/email-service.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/format-summary-for-user.ts":
/*!****************************************!*\
  !*** ./lib/format-summary-for-user.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatSummaryForUser: function() { return /* binding */ formatSummaryForUser; }\n/* harmony export */ });\n// 📍 At the bottom of email-service.ts\nfunction formatSummaryForUser(summary) {\n    const formatPrice = (price)=>new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n            minimumFractionDigits: 0\n        }).format(price);\n    const deviceCosts = summary.devices.reduce((sum, d)=>sum + d.totalCost, 0);\n    const basePrice = summary.totalPrice - deviceCosts;\n    return \"\\n  VR Configurator Order\\n  \\n  Order ID: \".concat(summary.orderId, \"\\n  Completed: \").concat(new Date(summary.completedAt).toLocaleString(), \"\\n  Pricing Tier: \").concat(summary.pricingTier, \"\\n  Total Price: \").concat(formatPrice(summary.totalPrice), \"\\n  \\n  Customer Details:\\n  - Name: \").concat(summary.user.name, \"\\n  - Company: \").concat(summary.user.company, \"\\n  - Email: \").concat(summary.user.email, \"\\n  \\n  Games:\\n  \").concat(summary.games.map((g)=>\"- \".concat(g.gameName, \" (\").concat(g.pricingPackage, \")\")).join(\"\\n\"), \"\\n  \\n  Environments:\\n  \").concat(summary.environments.map((env)=>\"- \".concat(env.environmentName, \" → \").concat(env.gameName, \" (\").concat(env.pricingPackage, \")\")).join(\"\\n\"), \"\\n  \\n  Devices:\\n  \").concat(summary.devices.map((d)=>\"- \".concat(d.devicePackage, \" \\xd7\").concat(d.quantity, \" @ \").concat(formatPrice(d.totalCost / (d.quantity * d.eventDays)), \"/day (\").concat(d.eventDays, \"d) = \").concat(formatPrice(d.totalCost))).join(\"\\n\"), \"\\n  \\n  Custom 3D:\\n  \").concat(summary.custom3D && summary.custom3D.additional3DModels > 0 ? \"- \".concat(summary.custom3D.additional3DModels, \" additional model(s)\") : \"- No custom 3D models\", \"\\n  \\n  Options:\\n  \").concat(summary.options.length > 0 ? summary.options.map((o)=>\"- \".concat(o.optionName, \" (\").concat(o.tier, \")\")).join(\"\\n\") : \"- No additional options\", \"\\n  \\n  Price Breakdown:\\n  - Base Package: \").concat(formatPrice(basePrice), \"\\n  - Device Rental: \").concat(formatPrice(deviceCosts), \"\\n  - Total: \").concat(formatPrice(summary.totalPrice), \"\\n  \\n  Thank you!\\n    \").trim();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9mb3JtYXQtc3VtbWFyeS1mb3ItdXNlci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBRUEsdUNBQXVDO0FBQ2hDLFNBQVNBLHFCQUFxQkMsT0FBMEI7SUFDM0QsTUFBTUMsY0FBYyxDQUFDQyxRQUNuQixJQUFJQyxLQUFLQyxZQUFZLENBQUMsU0FBUztZQUM3QkMsT0FBTztZQUNQQyxVQUFVO1lBQ1ZDLHVCQUF1QjtRQUN6QixHQUFHQyxNQUFNLENBQUNOO0lBRVosTUFBTU8sY0FBY1QsUUFBUVUsT0FBTyxDQUFDQyxNQUFNLENBQUMsQ0FBQ0MsS0FBS0MsSUFBTUQsTUFBTUMsRUFBRUMsU0FBUyxFQUFFO0lBQzFFLE1BQU1DLFlBQVlmLFFBQVFnQixVQUFVLEdBQUdQO0lBRXZDLE9BQU8sOENBSUksT0FERFQsUUFBUWlCLE9BQU8sRUFBQyxtQkFFWmpCLE9BREgsSUFBSWtCLEtBQUtsQixRQUFRbUIsV0FBVyxFQUFFQyxjQUFjLElBQUcsc0JBRTdDbkIsT0FEQ0QsUUFBUXFCLFdBQVcsRUFBQyxxQkFJMUJyQixPQUhLQyxZQUFZRCxRQUFRZ0IsVUFBVSxHQUFFLHlDQUlsQ2hCLE9BREhBLFFBQVFzQixJQUFJLENBQUNDLElBQUksRUFBQyxtQkFFakJ2QixPQURFQSxRQUFRc0IsSUFBSSxDQUFDRSxPQUFPLEVBQUMsaUJBSWhDeEIsT0FIU0EsUUFBUXNCLElBQUksQ0FBQ0csS0FBSyxFQUFDLHNCQU01QnpCLE9BSEFBLFFBQVEwQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxJQUFNLEtBQW9CQSxPQUFmQSxFQUFFQyxRQUFRLEVBQUMsTUFBcUIsT0FBakJELEVBQUVFLGNBQWMsRUFBQyxNQUFJQyxJQUFJLENBQUMsT0FBTSw2QkFXN0UvQixPQVJBQSxRQUFRZ0MsWUFBWSxDQUNqQkwsR0FBRyxDQUNGLENBQUNNLE1BQ0MsS0FBOEJBLE9BQXpCQSxJQUFJQyxlQUFlLEVBQUMsT0FBc0JELE9BQWpCQSxJQUFJSixRQUFRLEVBQUMsTUFBdUIsT0FBbkJJLElBQUlILGNBQWMsRUFBQyxNQUVyRUMsSUFBSSxDQUFDLE9BQU0sd0JBY2QvQixPQVhBQSxRQUFRVSxPQUFPLENBQ1ppQixHQUFHLENBQ0YsQ0FBQ2QsSUFDQyxLQUF5QkEsT0FBcEJBLEVBQUVzQixhQUFhLEVBQUMsU0FBb0JsQyxPQUFoQlksRUFBRXVCLFFBQVEsRUFBQyxPQUUxQnZCLE9BRitCWixZQUN2Q1ksRUFBRUMsU0FBUyxHQUFJRCxDQUFBQSxFQUFFdUIsUUFBUSxHQUFHdkIsRUFBRXdCLFNBQVMsSUFDdkMsVUFBMkJwQyxPQUFuQlksRUFBRXdCLFNBQVMsRUFBQyxTQUFnQyxPQUF6QnBDLFlBQVlZLEVBQUVDLFNBQVMsSUFFdkRpQixJQUFJLENBQUMsT0FBTSwwQkFXZC9CLE9BUEFBLFFBQVFzQyxRQUFRLElBQUl0QyxRQUFRc0MsUUFBUSxDQUFDQyxrQkFBa0IsR0FBRyxJQUN0RCxLQUF5QyxPQUFwQ3ZDLFFBQVFzQyxRQUFRLENBQUNDLGtCQUFrQixFQUFDLDBCQUN6Qyx5QkFDTCx3QkFZaUJ0QyxPQVJoQkQsUUFBUXdDLE9BQU8sQ0FBQ0MsTUFBTSxHQUFHLElBQ3JCekMsUUFBUXdDLE9BQU8sQ0FDWmIsR0FBRyxDQUFDLENBQUNlLElBQU0sS0FBc0JBLE9BQWpCQSxFQUFFQyxVQUFVLEVBQUMsTUFBVyxPQUFQRCxFQUFFRSxJQUFJLEVBQUMsTUFDeENiLElBQUksQ0FBQyxRQUNSLDJCQUNMLGdEQUlrQjlCLE9BRERBLFlBQVljLFlBQVcseUJBRTlCZCxPQURRQSxZQUFZUSxjQUFhLGlCQUNELE9BQWhDUixZQUFZRCxRQUFRZ0IsVUFBVSxHQUFFLDRCQUd2QzZCLElBQUk7QUFDUiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZm9ybWF0LXN1bW1hcnktZm9yLXVzZXIudHM/OWY2OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbWFpbE9yZGVyU3VtbWFyeSB9IGZyb20gXCIuL2VtYWlsLXNlcnZpY2VcIlxuXG4vLyDwn5ONIEF0IHRoZSBib3R0b20gb2YgZW1haWwtc2VydmljZS50c1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFN1bW1hcnlGb3JVc2VyKHN1bW1hcnk6IEVtYWlsT3JkZXJTdW1tYXJ5KTogc3RyaW5nIHtcbiAgICBjb25zdCBmb3JtYXRQcmljZSA9IChwcmljZTogbnVtYmVyKSA9PlxuICAgICAgbmV3IEludGwuTnVtYmVyRm9ybWF0KFwiZW4tVVNcIiwge1xuICAgICAgICBzdHlsZTogXCJjdXJyZW5jeVwiLFxuICAgICAgICBjdXJyZW5jeTogXCJVU0RcIixcbiAgICAgICAgbWluaW11bUZyYWN0aW9uRGlnaXRzOiAwLFxuICAgICAgfSkuZm9ybWF0KHByaWNlKVxuICBcbiAgICBjb25zdCBkZXZpY2VDb3N0cyA9IHN1bW1hcnkuZGV2aWNlcy5yZWR1Y2UoKHN1bSwgZCkgPT4gc3VtICsgZC50b3RhbENvc3QsIDApXG4gICAgY29uc3QgYmFzZVByaWNlID0gc3VtbWFyeS50b3RhbFByaWNlIC0gZGV2aWNlQ29zdHNcbiAgXG4gICAgcmV0dXJuIGBcbiAgVlIgQ29uZmlndXJhdG9yIE9yZGVyXG4gIFxuICBPcmRlciBJRDogJHtzdW1tYXJ5Lm9yZGVySWR9XG4gIENvbXBsZXRlZDogJHtuZXcgRGF0ZShzdW1tYXJ5LmNvbXBsZXRlZEF0KS50b0xvY2FsZVN0cmluZygpfVxuICBQcmljaW5nIFRpZXI6ICR7c3VtbWFyeS5wcmljaW5nVGllcn1cbiAgVG90YWwgUHJpY2U6ICR7Zm9ybWF0UHJpY2Uoc3VtbWFyeS50b3RhbFByaWNlKX1cbiAgXG4gIEN1c3RvbWVyIERldGFpbHM6XG4gIC0gTmFtZTogJHtzdW1tYXJ5LnVzZXIubmFtZX1cbiAgLSBDb21wYW55OiAke3N1bW1hcnkudXNlci5jb21wYW55fVxuICAtIEVtYWlsOiAke3N1bW1hcnkudXNlci5lbWFpbH1cbiAgXG4gIEdhbWVzOlxuICAke3N1bW1hcnkuZ2FtZXMubWFwKChnKSA9PiBgLSAke2cuZ2FtZU5hbWV9ICgke2cucHJpY2luZ1BhY2thZ2V9KWApLmpvaW4oXCJcXG5cIil9XG4gIFxuICBFbnZpcm9ubWVudHM6XG4gICR7c3VtbWFyeS5lbnZpcm9ubWVudHNcbiAgICAgIC5tYXAoXG4gICAgICAgIChlbnYpID0+XG4gICAgICAgICAgYC0gJHtlbnYuZW52aXJvbm1lbnROYW1lfSDihpIgJHtlbnYuZ2FtZU5hbWV9ICgke2Vudi5wcmljaW5nUGFja2FnZX0pYFxuICAgICAgKVxuICAgICAgLmpvaW4oXCJcXG5cIil9XG4gIFxuICBEZXZpY2VzOlxuICAke3N1bW1hcnkuZGV2aWNlc1xuICAgICAgLm1hcChcbiAgICAgICAgKGQpID0+XG4gICAgICAgICAgYC0gJHtkLmRldmljZVBhY2thZ2V9IMOXJHtkLnF1YW50aXR5fSBAICR7Zm9ybWF0UHJpY2UoXG4gICAgICAgICAgICBkLnRvdGFsQ29zdCAvIChkLnF1YW50aXR5ICogZC5ldmVudERheXMpXG4gICAgICAgICAgKX0vZGF5ICgke2QuZXZlbnREYXlzfWQpID0gJHtmb3JtYXRQcmljZShkLnRvdGFsQ29zdCl9YFxuICAgICAgKVxuICAgICAgLmpvaW4oXCJcXG5cIil9XG4gIFxuICBDdXN0b20gM0Q6XG4gICR7XG4gICAgc3VtbWFyeS5jdXN0b20zRCAmJiBzdW1tYXJ5LmN1c3RvbTNELmFkZGl0aW9uYWwzRE1vZGVscyA+IDBcbiAgICAgID8gYC0gJHtzdW1tYXJ5LmN1c3RvbTNELmFkZGl0aW9uYWwzRE1vZGVsc30gYWRkaXRpb25hbCBtb2RlbChzKWBcbiAgICAgIDogXCItIE5vIGN1c3RvbSAzRCBtb2RlbHNcIlxuICB9XG4gIFxuICBPcHRpb25zOlxuICAke1xuICAgIHN1bW1hcnkub3B0aW9ucy5sZW5ndGggPiAwXG4gICAgICA/IHN1bW1hcnkub3B0aW9uc1xuICAgICAgICAgIC5tYXAoKG8pID0+IGAtICR7by5vcHRpb25OYW1lfSAoJHtvLnRpZXJ9KWApXG4gICAgICAgICAgLmpvaW4oXCJcXG5cIilcbiAgICAgIDogXCItIE5vIGFkZGl0aW9uYWwgb3B0aW9uc1wiXG4gIH1cbiAgXG4gIFByaWNlIEJyZWFrZG93bjpcbiAgLSBCYXNlIFBhY2thZ2U6ICR7Zm9ybWF0UHJpY2UoYmFzZVByaWNlKX1cbiAgLSBEZXZpY2UgUmVudGFsOiAke2Zvcm1hdFByaWNlKGRldmljZUNvc3RzKX1cbiAgLSBUb3RhbDogJHtmb3JtYXRQcmljZShzdW1tYXJ5LnRvdGFsUHJpY2UpfVxuICBcbiAgVGhhbmsgeW91IVxuICAgIGAudHJpbSgpXG4gIH1cbiAgIl0sIm5hbWVzIjpbImZvcm1hdFN1bW1hcnlGb3JVc2VyIiwic3VtbWFyeSIsImZvcm1hdFByaWNlIiwicHJpY2UiLCJJbnRsIiwiTnVtYmVyRm9ybWF0Iiwic3R5bGUiLCJjdXJyZW5jeSIsIm1pbmltdW1GcmFjdGlvbkRpZ2l0cyIsImZvcm1hdCIsImRldmljZUNvc3RzIiwiZGV2aWNlcyIsInJlZHVjZSIsInN1bSIsImQiLCJ0b3RhbENvc3QiLCJiYXNlUHJpY2UiLCJ0b3RhbFByaWNlIiwib3JkZXJJZCIsIkRhdGUiLCJjb21wbGV0ZWRBdCIsInRvTG9jYWxlU3RyaW5nIiwicHJpY2luZ1RpZXIiLCJ1c2VyIiwibmFtZSIsImNvbXBhbnkiLCJlbWFpbCIsImdhbWVzIiwibWFwIiwiZyIsImdhbWVOYW1lIiwicHJpY2luZ1BhY2thZ2UiLCJqb2luIiwiZW52aXJvbm1lbnRzIiwiZW52IiwiZW52aXJvbm1lbnROYW1lIiwiZGV2aWNlUGFja2FnZSIsInF1YW50aXR5IiwiZXZlbnREYXlzIiwiY3VzdG9tM0QiLCJhZGRpdGlvbmFsM0RNb2RlbHMiLCJvcHRpb25zIiwibGVuZ3RoIiwibyIsIm9wdGlvbk5hbWUiLCJ0aWVyIiwidHJpbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/format-summary-for-user.ts\n"));

/***/ })

});